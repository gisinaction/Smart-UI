/* =========================================
* @name:        Grid
* @description: 全局栅格
* @author：		Vtoo Team
* @Copy：		Vtoo design 2014
* @git          https://github.com/VTOO/Smart-UI/
*============================================*/

// 删格系统

// 其他小屏幕/电话

@screen-xs:                  480px;
@screen-xs-min:              @screen-xs;
@screen-phone:               @screen-xs-min;

// 小屏幕/平板电脑

@screen-sm:                  768px;
@screen-sm-min:              @screen-sm;
@screen-tablet:              @screen-sm-min;

// 中等屏幕/桌面

@screen-md:                  992px;
@screen-md-min:              @screen-md;
@screen-desktop:             @screen-md-min;

// 大屏幕宽/桌面

@screen-lg:                  1200px;
@screen-lg-min:              @screen-lg;
@screen-lg-desktop:          @screen-lg-min;

// 所以媒体查询不重叠在需要时,提供一个最大值
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);

// 删格系统
// 义定制响应栅格

// 容器宽度
@grid-columns:              12;
// Padding between columns. Gets divided in half for the left and right.
@grid-gutter-width:         30px;
// Navbar collapse
// Point at which the navbar becomes uncollapsed.
@grid-float-breakpoint:     @screen-sm-min;
// Point at which the navbar begins collapsing.
@grid-float-breakpoint-max: (@grid-float-breakpoint - 1);


//== 容器大小

//Pagination小屏幕/平板电脑
@container-tablet:             ((720px + @grid-gutter-width));
// For `@screen-sm-min` and up.
@container-sm:                 @container-tablet;

//中等屏幕/桌面
@container-desktop:            ((940px + @grid-gutter-width));
// For `@screen-md-min` and up.
@container-md:                 @container-desktop;

//大屏幕宽/桌面
@container-large-desktop:      ((1140px + @grid-gutter-width));
// For `@screen-lg-min` and up.
@container-lg:                 @container-large-desktop;



// 容器宽度

.container {
  .container-fixed();

  @media (min-width: @screen-sm-min) {
    width: @container-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @container-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @container-lg;
  }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  .container-fixed();
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  .make-row();
}


// Columns
//
// Common styles for small and large grid columns

.make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid(xs);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
  .make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
  .make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
  .make-grid(lg);
}
